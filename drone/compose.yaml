version: '3'

networks:
  drone:
    external: false

services:
  gitea:
    image: gitea/gitea:1.21.3
    container_name: gitea-server
    environment:
      - HTTP_PORT=3001
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    networks:
      - drone
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3001:3001"
      - "2221:22"
  db:
    image: postgres:14.0
    container_name: gitea-db
    restart: always
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=gitea
      - POSTGRES_DB=gitea
    networks:
      - drone
    volumes:
      - ./postgres:/var/lib/postgresql/data

  drone:
    image: drone/drone:2
    container_name: drone-server
    environment:
      - DRONE_GITEA_SERVER=http://localhost:3001/
      - DRONE_GITEA_CLIENT_ID=6ed31d06-3fbc-4978-939c-66a7a2c58e19
      - DRONE_GITEA_CLIENT_SECRET=gto_mb4zaod4dfh6fvtgqxuiaozsiiwt4ty6ja5qt25zp72vu64ct4ja
      - DRONE_RPC_SECRET=super-duper-secret
      - DRONE_SERVER_HOST=localhost:4000
      - DRONE_SERVER_PROTO=http
    restart: always
    networks:
      - drone
    volumes:
      - ./drone:/data
    ports:
      - "4000:80"

  dronerunner:
    image: drone/drone-runner-docker:1
    container_name: drone-runner
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone-server
      - DRONE_RPC_SECRET=super-duper-secret
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=my-first-runner
    restart: always
    networks:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "3000:3000"